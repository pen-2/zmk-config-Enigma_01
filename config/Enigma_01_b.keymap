#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// #include <layout_shift_kp_override.dtsi>
// #define ZMK_POINTING_DEFAULT_SCRL_VAL 100

/ {
    behaviors {
        // Keep the original key_press behavior for ZMK core components

        original_key_press: original_key_press {
            compatible = "zmk,behavior-key-press";
            #binding-cells = <1>;
            label = "KEY_PRESS";
        };

        // Override the existing &kp behavior to use our custom implementation

        kp: key_press {
            compatible = "zmk,behavior-layout-shift-key-press";
            #binding-cells = <1>;
            label = "LAYOUT_SHIFT_KEY_PRESS";
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_left_right: behavior_sensor_rotate_mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        arrow_left_right: behavior_sensor_rotate_arrow_le {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp RIGHT>;

            tap-ms = <20>;
        };

        arrow_up_down: behavior_sensor_rotate_arrow_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp UP>, <&kp DOWN>;

            tap-ms = <20>;
        };

        page_up_down: behavior_sensor_rotate_page_up_ {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp PAGE_UP>, <&kp PAGE_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
           &kp ESC       &kp N4
&mt TAB Q  &kp W         &kp E      &kp R        &kp T          &kp Y  &kp U      &kp I        &kp O            &kp P
&kp A      &kp S         &kp D      &kp F        &kp G          &kp H  &kp J      &kp K        &kp L            &kp MINUS
&kp Z      &kp X         &kp C      &kp V        &kp B          &kp N  &kp M      &kp COMMA    &kp DOT          &kp SLASH
&kp LCTRL  &kp LEFT_WIN  &kp GRAVE  &lt 1 SPACE  &kp BACKSPACE         &kp ENTER  &lt 2 ENTER  &kp RIGHT_SHIFT  &kp LANG_ZENKAKUHANKAKU
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
            &kp K_UNDO    &kp K_UNDO
&kp K_UNDO  &kp K_UNDO    &kp K_UNDO    &kp K_UNDO   &kp K_UNDO       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &kp PRINTSCREEN
&kp LC(A)   &kp LC(S)     &kp LC(D)     &kp LC(F)    &kp K_UNDO       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &kp DELETE
&kp LC(Z)   &kp LC(X)     &kp LC(C)     &kp LC(V)    &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp UP_ARROW  &kp KP_DOT
&kp LCTRL   &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 SPACE  &kp BACKSPACE                     &kp ENTER        &lt 2 ENTER      &kp LEFT      &kp DOWN_ARROW
            >;

            sensor-bindings = <&arrow_left_right>;
        };

        layer_2 {
            bindings = <
                  &kp K_UNDO        &kp K_UNDO
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(NUMBER_0)
&kp F6            &kp F7            &kp F8            &kp F9            &kp F10           &kp K_UNDO        &kp K_UNDO        &kp K_UNDO        &kp K_UNDO        &kp K_UNDO
&kp F11           &kp F12           &kp K_UNDO        &kp K_UNDO        &kp K_UNDO        &kp K_UNDO        &kp K_UNDO        &kp K_UNDO        &kp K_UNDO        &kp K_UNDO
&kp LCTRL         &kp LEFT_WIN      &kp LEFT_ALT      &lt 1 SPACE       &kp BACKSPACE                       &kp ENTER         &lt 2 ENTER       &kp K_UNDO        &kp K_UNDO
            >;

            sensor-bindings = <&page_up_down>;
        };

        layer_3 {
            bindings = <
         &trans   &trans
&kp F1   &kp F2   &kp F3        &kp F4  &kp F5   &trans  &trans  &trans  &trans  &trans
&kp F6   &kp F7   &kp F8        &kp F9  &kp F10  &trans  &trans  &trans  &trans  &trans
&kp F11  &kp F12  &trans        &trans  &trans   &trans  &trans  &trans  &trans  &trans
&trans   &trans   &kp LEFT_ALT  &trans  &trans           &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_left_right>;
        };
    };
};
